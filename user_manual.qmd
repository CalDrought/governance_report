---
title: "User Manual"
subtitle: ""
author: "Tom Gibbens-Matsuyama, Emma Bea Mitchell, Karol Paya, Takeen Shamloo"
date: May 30, 2025
execute: 
  eval: True
  warning: False
  message: False
format:
  html: 
    toc: true
    toc-expand: 2
    toc-title: User Manual
    toc-location: left
editor: visual
editor_options: 
  chunk_output_type: console
---

# Overview

This R script collection provides functions to process, filter, and visualize water shortage and supply outlook data for different time horizons using the tmap package for interactive spatial visualization.

# Prerequisites

Before using these scripts, ensure you have:

-   Loaded the necessary R packages:

```{r}
library(here)             # File path management.
library(janitor)          # Cleaning dataset variable names.
library(tidyverse)        # Data transformation tools.
library(sf)               # Managing spatial variables.
library(tmap)             # Creating spatial visualizations.
library(rmapshaper)       # Limiting spatial resolution of district boundaries.
library(shiny)            # Core Shiny web framework
library(shinydashboard)   # Useful for box UI and dashboards
library(tools)            # Includes toTitleCase(), used to clean up dataset names
library(shinyjs)          # Enables JavaScript interaction inside Shiny
library(spnaf)            # Spatial analysis functions for network flows
library(shinyBS)          # Bootstrap popovers and modals
library(paletteer)        # For access to a wide variety of color palettes
library(readr)            # CSV translations in r.
library(ggplot2)          # Creating Visualizations.
library(dplyr)            # Filtering, Sorting, and so on.
library(bslib)            # Adding shiny app themes.
library(shinyWidgets)     # Extra shiny app widgets/tools.
library(plotly)           # Creating interactive plots 
library(DT)               # For tabling data.
library(shinycssloaders)  # Adding loading spinner ui.
```

-   Loaded and cleaned your data into:

    -   `water_data`: A list containing dataframes:

        -   `actual_shortage`

        -   `monthly_water_outlook`

        -   `five_year_outlook`

        -   `historical_production`

        -   `spatial_data`

-   Sourced the data cleaning scripts (e.g., `source("data_cleaning.R")`) so the data objects are ready.\
    Supplier metadata is joined via `org_id` to provide extra descriptive info in the maps.

    # Dashboard

    ## 1. **Interactive Map Panel**

    This section includes functions for visualizing spatial data using the `{tmap}` package in `view` mode. Each panel displays geographic patterns for different water-related datasets, highlighting key metrics like shortage levels or production-delivery differences:

    -   **`actual_shortage_tmap()`**: Maps the mean `state_standard_shortage_level` for each district based on the latest year of actual shortage data.

    -   **`monthly_outlook_tmap()`**: Maps forecasted shortage levels using the `monthly_water_outlook` dataset.

    -   **`five_year_outlook_tmap()`**: Visualizes the mean difference between projected supply and use over a 5-year horizon.

    -   **`historical_production_tmap()`**: Shows the average difference between water produced and delivered from the historical production dataset.

-   All maps are generated by filtering and joining spatial boundaries with aggregated water data by `org_id` and `pwsid`, using `sf`-compatible shapes.

    ## **2. Graphics Panel**

    The graphics section focuses on generating static charts (primarily using `{ggplot2 & plotly}`) to show the historical or forecasted records of the selected dataset. These visualizations help users identify trends and differences across time, organizations, or water districticcs/org ID.\
    \
    The types of plots include:

-   **Time series plots**

-   **Bar graphs**

Another feature in this panel, specifically for the `historical_production` dataset is the 'Total' checkbox, which allows users to toggle between:

-   Viewing individual `water produced` or `water delivered` values.

-   Viewing the total summed quantities across selected systems or time periods.

All visualizations dynamically respond to user-selected filters (e.g., date range, organization, water type), providing a flexible analytical view tailored to the user's interests.

## 3. **Statistics Panel**

The Statistics Panel displays summary statistics through dynamic value boxes based on user-selected inputs such as date ranges and supplier IDs. These value boxes provide the total quantities of the selected dataset and time range.

This panel is supported by a set of utility functions that filter and aggregate data for different datasets:

-   **Label Formatter (`pretty_label`)**: Formats raw column names into readable titles for display (e.g., `"water_use_acre_feet"` → `"Water Use"`).

-   **Five-Year Outlook Calculations (`five_values_function_sum_stat`)**: Aggregates long-term forecast values such as water use, supply, augmentation, and reduction over a user-specified year range.

-   **Monthly Outlook Summary (`monthly_values_function_sum_stat`)**: Summarizes forecasted monthly water values in acre-feet for a selected date range and supplier.

-   **Actual Shortage Data (`actual_filter_function_sum_stats`)**: Filters the actual shortage dataset by supplier ID and time range, returning entries that match the selected period.

-   **Historical Production Data (`hist_filt_function_sum_stats`)**: Filters the historical production data for a given supplier and time range. It computes the total quantities produced and delivered, and handles missing values by converting them to zero.

These functions are used to populate the dashboard’s value boxes with relevant, aggregated data that updates reactively based on user input.

## 4. **Missing Value Panel**

The Missing Value Panel is designed to audit data completeness over a the selected date range. This panel enhances transparency and helps users assess the reliability of the dataset before making interpretations or drawing conclusions.

### Key Components:

-   **Filtering Functions**:\
    Each dataset has its own filtering utility to subset data within the selected date range (\*add more details):

    -   `actual_filter()`
    -   `monthlywater_filter()`
    -   `fiveyr_filter()`
    -   `historical_filtering()`

-   **NA Summary Functions**:\
    These functions calculate the percentage of missing (`NA`) values across key variables in each dataset:

    -   `monthly_na()`
    -   `actual_na()`
    -   `fiveyr_na()`
    -   `hist_na()`

## **Additional Helpful Notes**

### **Supplier Name Standardization**
Although the clean_supplier_name function should automatically standardize names, please refer to this standardization when adding new supplier names to the data:

- Any name ending with ",city of" should be changed to starting with "city of"
- All supplier names should be in capital case
- Spell out any abbreviations (i.e. change I.d. to Irrigation District)
- With the exception of Cal Am, all company full names should be spelled out completely
- No periods should be included in the names
- Refer to the function for additional specifics
